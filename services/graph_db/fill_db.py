from client import HelloWorldExample

def fill_db():
    greeter = HelloWorldExample("neo4j://neo4j:7687", "neo4j", "vbifhbr!@")

    greeter.delete_all()

    # add nodes
    greeter.create_node(label="Profession", properties="{name: 'actor'}")
    greeter.create_node(label="Film", properties="{name: 'Blade_Runner_2049'}")
    greeter.create_node(label="Fictional_robot", properties="{name: 'C-3PO'}")
    greeter.create_node(label="Bar", properties="{name: 'Spaceport_Cantina'}")
    greeter.create_node(label="Musical_ensemble", properties="{name: 'Figrin_and_the_Modal_Nodes'}")
    greeter.create_node(label="Litaraly_work", properties="{name: 'Gone_with_the_Wind'}")
    greeter.create_node(label="Fictional_human", properties="{name: 'Han_Solo'}")
    greeter.create_node(label="Fictional_planet", properties="{name: 'Hoth', climate: 'snowy'}")
    greeter.create_node(label="Type_of_sport", properties="{name: 'hover_skiing'}")
    greeter.create_node(label="Type_of_sport", properties="{name: 'ice_boarding'}")
    greeter.create_node(label="Human", properties="{name: 'Ivan_Pavlov'}")
    greeter.create_node(label="Fictional_human", properties="{name: 'K'}")
    greeter.create_node(label="Human", properties="{name: 'Luke_Skywalker'}")
    greeter.create_node(label="Musical_composition", properties="{name: 'Mad_about_me'}")
    greeter.create_node(label="Profession", properties="{name: 'physiologist'}")
    greeter.create_node(label="Fictional_human", properties="{name: 'Rick_Deckard'}")
    greeter.create_node(label="Human", properties="{name: 'Ryan_Gosling', sex_or_gender: 'male'}")
    greeter.create_node(label="Travel_agency", properties="{name: 'Star_Tours'}")
    greeter.create_node(label="Fictional_planet", properties="{name: 'Tatooine'}")
    greeter.create_node(label="Unit_of_time", properties="{name: '19th_century'}")
    greeter.create_node(label="Prosthesis", properties="{name: 'arm_prosthesis'}")
    greeter.create_node(label="Fictional_human", properties="{name: 'Darth_Vader'}")
    greeter.create_node(label="Pet", properties="{name: 'dog'}")
    greeter.create_node(label="Human", properties="{name: 'Harison_Ford', sex_or_gender: 'male'}")
    greeter.create_node(label="Human", properties="{name: 'Leo_Tolstoy', sex_or_gender: 'male'}")
    greeter.create_node(label="Academic_discipline", properties="{name: 'technology'}")
    greeter.create_node(label="Literaly_work", properties="{name: 'War_and_Peace'}")


    # create relations
    greeter.create_relation(1, 16, label="cast_member")
    greeter.create_relation(1, 23, label="cast_member")
    greeter.create_relation(2, 19, label="would_like_to_live")
    greeter.create_relation(2, 25, label="loves")
    greeter.create_relation(2, 22, label="loves")
    greeter.create_relation(2, 26, label="loves")
    greeter.create_relation(2, 22, label="loyal_as")
    greeter.create_relation(2, 4, label="loves")
    greeter.create_relation(2, 8, label="want_to_try")
    greeter.create_relation(2, 13, label="loves")
    greeter.create_relation(2, 1, label="loves")
    greeter.create_relation(3, 18, label="planet")
    greeter.create_relation(4, 3, label="perform_at")
    greeter.create_relation(10, 14, label="occupation")
    greeter.create_relation(11, 1, label="present_at_work")
    greeter.create_relation(11, 16, label="performer")
    greeter.create_relation(12, 8, label="want_to_try")
    greeter.create_relation(13, 4, label="performer")
    greeter.create_relation(15, 1, label="present_in_work")
    greeter.create_relation(16, 0, label="occupation")
    greeter.create_relation(17, 8, label="known_for_talking")
    greeter.create_relation(17, 9, label="known_for_talking")
    greeter.create_relation(21, 12, label="cut_off_arm")
    greeter.create_relation(22, 2, label="loyal_as")
    greeter.create_relation(23, 0, label="occupation")
    greeter.create_relation(23, 6, label="looks_like")
    greeter.create_relation(10, 22, label="held_experiment_on")
    greeter.create_relation(12, 20, label="has")
    greeter.create_relation(15, 23, label="performer")
    greeter.create_relation(26, 24, label="author")
    greeter.create_relation(26, 19, label="describes")
#add interests
    greeter.create_relation(2, 1, label="discuss", properties="{subclass_of:'interests', weight: '0.9'}")
    greeter.create_relation(2, 1, label="watch", properties="{subclass_of:'interests', weight: '0.8'}")
    greeter.create_relation(2, 22, label="discuss", properties="{subclass_of:'interests', weight: '0.8'}")
    greeter.create_relation(2, 22, label="meet", properties="{subclass_of:'interests', weight: '0.99'}")
    greeter.create_relation(2, 22, label="have_as_a_pet", properties="{subclass_of:'interests', weight: '0.3'}")
    greeter.create_relation(2, 22, label="watch", properties="{subclass_of:'interests', weight: '0.7'}")
    greeter.create_relation(2, 22, label="watch_memes_about", properties="{subclass_of:'interests', weight: '0.99'}")
    greeter.create_relation(2, 4, label="discuss", properties="{subclass_of:'interests', weight: '0.7'}")
    greeter.create_relation(2, 4, label="listen", properties="{subclass_of:'interests', weight: '0.85'}")
    greeter.create_relation(2, 4, label="visit_perfomances", properties="{subclass_of:'interests', weight: '0.9'}")
    greeter.create_relation(2, 8, label="discuss", properties="{subclass_of:'interests', weight: '0.6'}")
    greeter.create_relation(2, 8, label="watch", properties="{subclass_of:'interests', weight: '0.8'}")
    greeter.create_relation(2, 8, label="try", properties="{subclass_of:'interests', weight: '0.05'}")
    greeter.create_relation(2, 9, label="discuss", properties="{subclass_of:'interests', weight: '0.2'}")
    greeter.create_relation(2, 9, label="try", properties="{subclass_of:'interests', weight: '0.01'}")
    greeter.create_relation(2, 9, label="watch", properties="{subclass_of:'interests', weight: '0.4'}")
    greeter.create_relation(2, 13, label="discuss", properties="{subclass_of:'interests', weight: '0.6'}")
    greeter.create_relation(2, 13, label="play", properties="{subclass_of:'interests', weight: '0.2'}")
    greeter.create_relation(2, 13, label="listen", properties="{subclass_of:'interests', weight: '0.95'}")
    greeter.create_relation(2, 26, label="discuss", properties="{subclass_of:'interests', weight: '0.8'}")
    greeter.create_relation(2, 26, label="read", properties="{subclass_of:'interests', weight: '0.8'}")
    greeter.create_relation(2, 26, label="watch_adaptation", properties="{subclass_of:'interests', weight: '0.4'}")
    greeter.create_relation(2, 26, label="take_part_in_adaptation", properties="{subclass_of:'interests', weight: '0.6'}")

if __name__ == '__main__':
    fill_db()

